# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

$docker = <<SCRIPT
wget -qO- 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xee6d536cf7dc86e2d7d56f59a178ac6c6238f52e' | sudo apt-key add --import
sudo apt-get update && sudo apt-get install apt-transport-https
sudo apt-get install -y linux-image-extra-virtual
echo "deb https://packages.docker.com/1.10/apt/repo ubuntu-trusty main" | sudo tee /etc/apt/sources.list.d/docker.list
sudo apt-get update && sudo apt-get install -y docker-engine
echo "DOCKER_OPTS='--insecure-registry hubproxy.kristiansen.tst:80 --registry-mirror http://hubproxy.kristiansen.tst'" | sudo tee /etc/default/docker
sudo service docker restart
SCRIPT

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = 'my/parallels/ubuntu-14.04'


  config.vm.provider 'parallels' do |prl|
    prl.memory = 2048
    prl.cpus = 2
  end

  if Vagrant.has_plugin?('vagrant-cachier')
    config.cache.scope = :box
  end

  if Vagrant.has_plugin?('landrush')
    config.landrush.enabled = true
    config.landrush.tld = 'orca.tst'
    puts "##- If DNS resolution fails run 'vagrant landrush restart' -##"
  end

  config.vm.provision 'shell', inline: $docker

  config.vm.define 'ducp0' do |ducp0|
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    ducp0.vm.network "private_network", ip: "192.168.33.10"
    ducp0.vm.hostname = 'ducp0.orca.tst'
    config.vm.provision 'shell', inline: "docker run -v /var/run/docker.sock:/var/run/docker.sock --name ucp docker/ucp install  --host-address 192.168.33.10 --san ducp0.orca.tst"
  end

  config.vm.define 'ducp1' do |ducp1|
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    ducp1.vm.network "private_network", ip: "192.168.33.11"
    ducp1.vm.hostname = 'ducp1.orca.tst'
    #config.vm.provision 'shell', inline: "sudo docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock --name ucp dockerorca/ucp install -i --host-address 192.168.33.11"
  end

  config.vm.define 'ducp2' do |ducp2|
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    ducp2.vm.network "private_network", ip: "192.168.33.12"
    ducp2.vm.hostname = 'ducp2.lf'
  end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing 'localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
